{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\aquatron\\\\aquatronics\\\\aquatron-frontend\\\\src\\\\pages\\\\DeviceControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { Box, Typography, Alert, Button, Card, CardContent, ButtonGroup } from '@mui/material';\nimport { Send as SendIcon, FileDownload as DownloadIcon, FileUpload as UploadIcon } from '@mui/icons-material';\nimport api from '../api/axios';\nimport { getSocket } from '../socket';\nimport { useAuth } from '../auth/AuthContext';\nimport SortableTable from '../components/SortableTable';\nimport { exportComprehensiveData, importComprehensiveData, createComprehensiveTemplate } from '../utils/excelUtils';\n\n// ...existing code...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceControl = () => {\n  _s();\n  const {\n    role\n  } = useAuth();\n  const [deviceSettings, setDeviceSettings] = useState({});\n  const [elementChecklist, setElementChecklist] = useState([]);\n  const [alert, setAlert] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef(null);\n  const [transportMode, setTransportMode] = useState('auto');\n  const [transportLoading, setTransportLoading] = useState(false);\n  // Fetch current transport mode on mount\n  useEffect(() => {\n    const fetchTransportMode = async () => {\n      try {\n        const response = await api.get('/device/transport-mode');\n        setTransportMode(response.data.mode || 'auto');\n      } catch (error) {\n        setAlert({\n          type: 'error',\n          message: 'Failed to fetch transport mode'\n        });\n      }\n    };\n    fetchTransportMode();\n  }, []);\n\n  // Change transport mode\n  const handleTransportModeChange = async mode => {\n    setTransportLoading(true);\n    try {\n      const response = await api.post('/device/transport-mode', {\n        mode\n      });\n      setTransportMode(response.data.mode);\n      setAlert({\n        type: 'success',\n        message: `Transport mode set to ${response.data.mode}`\n      });\n    } catch (error) {\n      setAlert({\n        type: 'error',\n        message: 'Failed to set transport mode'\n      });\n    }\n    setTransportLoading(false);\n  };\n  const [deviceId, setDeviceId] = useState('default');\n  // Feedback/ADC/statistics state\n  const [feedbackInfo, setFeedbackInfo] = useState(null);\n  const [feedbackLoading, setFeedbackLoading] = useState(false);\n  // ...existing code...\n\n  // Get deviceId from socket events\n  useEffect(() => {\n    const socket = getSocket();\n    socket.on('device-status', data => {\n      if (data.deviceId) {\n        setDeviceId(data.deviceId);\n      }\n    });\n    socket.on('device-data', data => {\n      if (data.deviceId) {\n        setDeviceId(data.deviceId);\n      }\n    });\n    // Listen for feedback/ADC/statistics events\n    socket.on('feedback-info', data => {\n      setFeedbackInfo(data);\n      setFeedbackLoading(false);\n    });\n    // Removed adc-data and stat-data listeners (no longer used)\n\n    return () => {\n      socket.off('device-status');\n      socket.off('device-data');\n      socket.off('feedback-info');\n      // Removed adc-data and stat-data listeners (no longer used)\n    };\n  }, []);\n  // --- FEEDBACK/ADC/STATISTICS REQUEST HANDLERS ---\n  const handleGetFeedbackInfo = async () => {\n    setFeedbackLoading(true);\n    setAlert(null);\n    try {\n      await api.get('/device/feedback-info');\n    } catch (error) {\n      setAlert({\n        type: 'error',\n        message: 'Failed to get feedback info'\n      });\n      setFeedbackLoading(false);\n    }\n  };\n  // Removed handleGetADCData and handleGetStatData (no longer used)\n\n  // Removed filteredElements and searchTerm logic (already deleted)\n\n  // Utility and handler functions used in JSX\n  const getSelectedElementsFromChecklist = () => {\n    return elementChecklist.filter(item => item.checked).map(item => ({\n      symbol: item.symbol,\n      name: item.name,\n      quantity: item.quantity,\n      vout_base: item.vout_base,\n      freq: item.freq\n    }));\n  };\n  const handleChecklistChange = (symbol, checked) => {\n    setElementChecklist(prev => {\n      // First update the checked status\n      const updatedChecklist = prev.map(item => item.symbol === symbol ? {\n        ...item,\n        checked\n      } : item);\n\n      // Then sort: checked items first, then unchecked items\n      return updatedChecklist.sort((a, b) => {\n        if (a.checked && !b.checked) return -1;\n        if (!a.checked && b.checked) return 1;\n        return 0; // Keep original order within each group\n      });\n    });\n  };\n\n  // Removed unused: handleChecklistQuantityChange (already deleted)\n\n  const handleCustomQtyChange = (symbol, quantity) => {\n    setElementChecklist(prev => prev.map(item => item.symbol === symbol ? {\n      ...item,\n      quantity: Number(quantity)\n    } : item));\n  };\n  const handleTestSubmit = async e => {\n    e.preventDefault();\n    console.log('🔍 handleTestSubmit called');\n    const selectedFromChecklist = getSelectedElementsFromChecklist();\n    if (selectedFromChecklist.length === 0) {\n      setAlert({\n        type: 'error',\n        message: 'Please select at least one element from the checklist'\n      });\n      return;\n    }\n    try {\n      setLoading(true);\n      const testData = selectedFromChecklist.map(element => ({\n        symbol: element.symbol,\n        quantity: element.quantity\n      }));\n      console.log('🔍 Sending test data:', testData);\n      console.log('🔍 API call to /device/sw-parameters');\n\n      // Removed setLastSentData (no longer used)\n\n      const response = await api.post('/device/sw-parameters', {\n        elements: testData,\n        deviceId: deviceId\n      });\n      console.log('🔍 API response received:', response);\n      setAlert({\n        type: 'success',\n        message: 'Test parameters sent successfully!'\n      });\n      setElementChecklist(prev => prev.map(item => ({\n        ...item,\n        checked: false\n      })));\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('🔍 API call failed:', error);\n      console.error('🔍 Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n      setAlert({\n        type: 'error',\n        message: 'Failed to send test parameters'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeviceSettingsEdit = async (rowIndex, columnId, value) => {\n    const updatedSettings = {\n      ...deviceSettings\n    };\n    const settingKey = Object.keys(updatedSettings).filter(key => key !== 'vout_table')[rowIndex];\n    if (settingKey) {\n      updatedSettings[settingKey] = value;\n      setDeviceSettings(updatedSettings);\n      try {\n        await api.post('/device/settings', {\n          ...updatedSettings,\n          deviceId: deviceId\n        });\n        setAlert({\n          type: 'success',\n          message: 'Device settings updated successfully!'\n        });\n      } catch (error) {\n        setAlert({\n          type: 'error',\n          message: 'Failed to update device settings'\n        });\n      }\n    }\n  };\n\n  // Excel import/export functions for STP using utility functions\n  const exportSTP = () => {\n    try {\n      // Prepare STP data with quantities from checklist\n      const selectedFromChecklist = getSelectedElementsFromChecklist();\n      if (selectedFromChecklist.length === 0) {\n        setAlert({\n          type: 'error',\n          message: 'Please select elements from the checklist to export'\n        });\n        return;\n      }\n      const stpData = selectedFromChecklist.map(element => ({\n        symbol: element.symbol,\n        name: element.name,\n        quantity: element.quantity,\n        vout_base: element.vout_base,\n        freq: element.freq\n      }));\n      const result = exportComprehensiveData(deviceSettings, stpData, 'stp_and_device_settings.xlsx', {\n        includeValidation: true,\n        timestamp: new Date().toISOString()\n      });\n      if (result.success) {\n        setAlert({\n          type: 'success',\n          message: 'STP and device settings exported successfully!'\n        });\n      } else {\n        setAlert({\n          type: 'error',\n          message: `Export failed: ${result.message}`\n        });\n      }\n    } catch (error) {\n      console.error('Export error:', error);\n      setAlert({\n        type: 'error',\n        message: 'Failed to export STP parameters'\n      });\n    }\n  };\n  const importSTP = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      setLoading(true);\n      const result = await importComprehensiveData(file, {\n        validateData: true,\n        allowUnknownParameters: false\n      });\n      if (result.success) {\n        // Update STP data in checklist\n        if (result.stpData && result.stpData.length > 0) {\n          const updatedChecklist = elementChecklist.map(checklistItem => {\n            const importedData = result.stpData.find(row => row.symbol === checklistItem.symbol);\n            if (importedData) {\n              return {\n                ...checklistItem,\n                quantity: Number(importedData.quantity) || checklistItem.defaultQuantity,\n                checked: true\n              };\n            }\n            return checklistItem;\n          });\n          setElementChecklist(updatedChecklist);\n        }\n\n        // Update device settings\n        if (result.deviceSettings && Object.keys(result.deviceSettings).length > 0) {\n          setDeviceSettings(prev => ({\n            ...prev,\n            ...result.deviceSettings\n          }));\n        }\n\n        // Show validation warnings if any\n        if (result.warnings && result.warnings.length > 0) {\n          setAlert({\n            type: 'warning',\n            message: `Import completed with warnings: ${result.warnings.join(', ')}`\n          });\n        } else {\n          setAlert({\n            type: 'success',\n            message: 'STP and device settings imported successfully!'\n          });\n        }\n\n        // Show validation summary if available\n        if (result.validation) {\n          console.log('Import validation:', result.validation);\n        }\n      } else {\n        setAlert({\n          type: 'error',\n          message: `Import failed: ${result.message}`\n        });\n      }\n    } catch (error) {\n      console.error('Import error:', error);\n      setAlert({\n        type: 'error',\n        message: 'Failed to import STP parameters. Please check the file format.'\n      });\n    } finally {\n      setLoading(false);\n      event.target.value = '';\n    }\n  };\n  const downloadSTPTemplate = () => {\n    try {\n      const result = createComprehensiveTemplate('stp_and_device_template.xlsx', {\n        includeInstructions: true,\n        includeValidationRules: true\n      });\n      if (result.success) {\n        setAlert({\n          type: 'success',\n          message: 'STP and device settings template downloaded successfully!'\n        });\n      } else {\n        setAlert({\n          type: 'error',\n          message: `Template download failed: ${result.message}`\n        });\n      }\n    } catch (error) {\n      console.error('Template download error:', error);\n      setAlert({\n        type: 'error',\n        message: 'Failed to download template'\n      });\n    }\n  };\n\n  // Removed exportSWPForDevice, exportControllerSWP, and related orphaned code (already deleted)\n\n  // Available elements data with default quantities\n  const ELEMENTS = useMemo(() => [{\n    symbol: 'Li',\n    name: 'Li',\n    defaultQuantity: 100,\n    vout_base: 3.71,\n    freq: 2226\n  }, {\n    symbol: 'Ca',\n    name: 'Ca',\n    defaultQuantity: 100,\n    vout_base: 2.95,\n    freq: 1765\n  }, {\n    symbol: 'Na',\n    name: 'Na',\n    defaultQuantity: 100,\n    vout_base: 3.032,\n    freq: 1818\n  }, {\n    symbol: 'Cl',\n    name: 'Cl',\n    defaultQuantity: 100,\n    vout_base: 3.916,\n    freq: 2351\n  }, {\n    symbol: 'Fe',\n    name: 'Fe',\n    defaultQuantity: 100,\n    vout_base: 4.558,\n    freq: 2739\n  }, {\n    symbol: 'Zn',\n    name: 'Zn',\n    defaultQuantity: 100,\n    vout_base: 4.167,\n    freq: 2504\n  }, {\n    symbol: 'Cu',\n    name: 'Cu',\n    defaultQuantity: 100,\n    vout_base: 4.557,\n    freq: 2739\n  }, {\n    symbol: 'Pb',\n    name: 'Pb',\n    defaultQuantity: 100,\n    vout_base: 3.321,\n    freq: 1988\n  }, {\n    symbol: 'Mg',\n    name: 'Mg',\n    defaultQuantity: 100,\n    vout_base: 3.63,\n    freq: 2175\n  }, {\n    symbol: 'Mn',\n    name: 'Mn',\n    defaultQuantity: 100,\n    vout_base: 4.497,\n    freq: 2697\n  }, {\n    symbol: 'Cd',\n    name: 'Cd',\n    defaultQuantity: 100,\n    vout_base: 3.711,\n    freq: 2228\n  }, {\n    symbol: 'K',\n    name: 'K',\n    defaultQuantity: 100,\n    vout_base: 2.454,\n    freq: 1466\n  }, {\n    symbol: 'B',\n    name: 'B',\n    defaultQuantity: 100,\n    vout_base: 5.256,\n    freq: 3161\n  }, {\n    symbol: 'F',\n    name: 'F',\n    defaultQuantity: 100,\n    vout_base: 3.896,\n    freq: 2340\n  }, {\n    symbol: 'Mo',\n    name: 'Mo',\n    defaultQuantity: 100,\n    vout_base: 4.147,\n    freq: 2486\n  }, {\n    symbol: 'Ni',\n    name: 'Ni',\n    defaultQuantity: 100,\n    vout_base: 4.661,\n    freq: 2797\n  }, {\n    symbol: 'Se',\n    name: 'Se',\n    defaultQuantity: 100,\n    vout_base: 3.423,\n    freq: 2052\n  }, {\n    symbol: 'Si',\n    name: 'Si',\n    defaultQuantity: 100,\n    vout_base: 3.814,\n    freq: 2287\n  }, {\n    symbol: 'Ag',\n    name: 'Ag',\n    defaultQuantity: 100,\n    vout_base: 4.043,\n    freq: 2428\n  }, {\n    symbol: 'As',\n    name: 'As',\n    defaultQuantity: 100,\n    vout_base: 3.711,\n    freq: 2228\n  }, {\n    symbol: 'Hg',\n    name: 'Hg',\n    defaultQuantity: 100,\n    vout_base: 3.568,\n    freq: 2140\n  }, {\n    symbol: 'P',\n    name: 'P',\n    defaultQuantity: 100,\n    vout_base: 3.402,\n    freq: 2041\n  }, {\n    symbol: 'Al',\n    name: 'Al',\n    defaultQuantity: 100,\n    vout_base: 4.065,\n    freq: 2439\n  }, {\n    symbol: 'Cr',\n    name: 'Cr',\n    defaultQuantity: 100,\n    vout_base: 1.343,\n    freq: 797\n  }, {\n    symbol: 'Co',\n    name: 'Co',\n    defaultQuantity: 100,\n    vout_base: 4.66,\n    freq: 2797\n  }, {\n    symbol: 'Ba',\n    name: 'Ba',\n    defaultQuantity: 100,\n    vout_base: 2.598,\n    freq: 1554\n  }, {\n    symbol: 'Am',\n    name: 'Am',\n    defaultQuantity: 100,\n    vout_base: 3.341,\n    freq: 1999\n  }, {\n    symbol: 'NO',\n    name: 'NO',\n    defaultQuantity: 100,\n    vout_base: 4.660,\n    freq: 2797\n  }], []);\n\n  // Column definitions for Device Settings - non-editable for non-admin users\n  const deviceSettingsColumns = [{\n    id: 'setting',\n    label: 'Setting',\n    sortable: true,\n    editable: false\n  }, {\n    id: 'value',\n    label: 'Value',\n    align: 'center',\n    sortable: true,\n    editable: role === 'admin' || role === 'superadmin',\n    type: 'number',\n    inputProps: {\n      min: 0\n    }\n  }, {\n    id: 'unit',\n    label: 'Unit',\n    align: 'center',\n    sortable: true,\n    editable: false\n  }];\n\n  // Fetch device settings\n  const fetchDeviceSettings = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/device/settings');\n      console.log('DEBUG /device/settings response:', response.data);\n      setDeviceSettings(response.data);\n    } catch (error) {\n      console.error('Error fetching device settings:', error);\n      // Set mock data for demonstration\n      setDeviceSettings({\n        device_id: 'DEV_001',\n        firmware_version: '1.2.3',\n        operating_mode: 'Normal',\n        freefall: 10,\n        hptf: 500,\n        harmonic: 0,\n        duration_ms: 7000,\n        vout_table: [{\n          symbol: 'H',\n          vout_base: 1.0,\n          freq: 600\n        }, {\n          symbol: 'He',\n          vout_base: 1.1,\n          freq: 660\n        }, {\n          symbol: 'Li',\n          vout_base: 3.71,\n          freq: 2226\n        }, {\n          symbol: 'Be',\n          vout_base: 1.2,\n          freq: 720\n        }, {\n          symbol: 'B',\n          vout_base: 1.3,\n          freq: 780\n        }, {\n          symbol: 'C',\n          vout_base: 1.4,\n          freq: 840\n        }, {\n          symbol: 'N',\n          vout_base: 1.5,\n          freq: 900\n        }, {\n          symbol: 'O',\n          vout_base: 1.6,\n          freq: 960\n        }, {\n          symbol: 'F',\n          vout_base: 1.7,\n          freq: 1020\n        }, {\n          symbol: 'Ne',\n          vout_base: 1.8,\n          freq: 1080\n        }, {\n          symbol: 'Na',\n          vout_base: 3.032,\n          freq: 1818\n        }, {\n          symbol: 'Mg',\n          vout_base: 2.0,\n          freq: 1200\n        }, {\n          symbol: 'Al',\n          vout_base: 2.1,\n          freq: 1260\n        }, {\n          symbol: 'Si',\n          vout_base: 2.2,\n          freq: 1320\n        }, {\n          symbol: 'P',\n          vout_base: 2.3,\n          freq: 1380\n        }, {\n          symbol: 'S',\n          vout_base: 2.4,\n          freq: 1440\n        }, {\n          symbol: 'Cl',\n          vout_base: 3.916,\n          freq: 2351\n        }, {\n          symbol: 'Ar',\n          vout_base: 2.6,\n          freq: 1560\n        }, {\n          symbol: 'K',\n          vout_base: 2.7,\n          freq: 1620\n        }, {\n          symbol: 'Ca',\n          vout_base: 2.95,\n          freq: 1765\n        }, {\n          symbol: 'Sc',\n          vout_base: 2.9,\n          freq: 1740\n        }, {\n          symbol: 'Ti',\n          vout_base: 3.0,\n          freq: 1800\n        }, {\n          symbol: 'V',\n          vout_base: 3.1,\n          freq: 1860\n        }, {\n          symbol: 'Cr',\n          vout_base: 3.2,\n          freq: 1920\n        }, {\n          symbol: 'Mn',\n          vout_base: 3.3,\n          freq: 1980\n        }, {\n          symbol: 'Fe',\n          vout_base: 4.558,\n          freq: 2739\n        }, {\n          symbol: 'Co',\n          vout_base: 3.5,\n          freq: 2100\n        }, {\n          symbol: 'Ni',\n          vout_base: 3.6,\n          freq: 2160\n        }, {\n          symbol: 'Cu',\n          vout_base: 3.7,\n          freq: 2220\n        }, {\n          symbol: 'Zn',\n          vout_base: 3.8,\n          freq: 2280\n        }]\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Removed fetchTransportMode and handleTransportModeChange (no longer used)\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.on('device-settings-updated', newSettings => {\n      setDeviceSettings(newSettings);\n    });\n    return () => {\n      socket.off('device-settings-updated');\n    };\n  }, []);\n\n  // Initialize element checklist with all elements\n  useEffect(() => {\n    const checklist = ELEMENTS.map(element => ({\n      ...element,\n      checked: false,\n      quantity: element.defaultQuantity\n    }));\n    setElementChecklist(checklist);\n  }, [ELEMENTS]);\n\n  // Convert device settings to table data\n  const deviceSettingsData = [{\n    setting: 'Device ID',\n    value: deviceSettings.device_id || 'N/A',\n    unit: ''\n  }, {\n    setting: 'Firmware Version',\n    value: deviceSettings.firmware_version || 'N/A',\n    unit: ''\n  }, {\n    setting: 'Operating Mode',\n    value: deviceSettings.operating_mode || 'N/A',\n    unit: ''\n  }, {\n    setting: 'Freefall',\n    value: deviceSettings.freefall || 0,\n    unit: 'ms'\n  }, {\n    setting: 'HPTF',\n    value: deviceSettings.hptf || 0,\n    unit: 'Hz'\n  }, {\n    setting: 'Harmonic',\n    value: deviceSettings.harmonic || 0,\n    unit: ''\n  }, {\n    setting: 'Duration',\n    value: deviceSettings.duration_ms || 0,\n    unit: 'ms'\n  }];\n  const isAdmin = role === 'admin' || role === 'superadmin';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      maxWidth: 1400,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 3,\n        fontWeight: 700,\n        color: '#e3e6f3',\n        letterSpacing: 1,\n        textShadow: '0 2px 8px #2228'\n      },\n      children: \"Device Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          color: '#b6c2e2',\n          fontWeight: 500\n        },\n        children: \"Transport Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: \"outlined\",\n        sx: {\n          background: '#23273a',\n          borderRadius: 2\n        },\n        disabled: transportLoading,\n        children: ['auto', 'wifi', 'uart'].map(mode => /*#__PURE__*/_jsxDEV(Button, {\n          variant: transportMode === mode ? 'contained' : 'outlined',\n          color: transportMode === mode ? 'primary' : 'inherit',\n          onClick: () => handleTransportModeChange(mode),\n          sx: {\n            fontWeight: 600,\n            textTransform: 'capitalize',\n            minWidth: 80\n          },\n          disabled: transportMode === mode || transportLoading,\n          children: mode\n        }, mode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), transportLoading && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: '#b6c2e2',\n          ml: 2\n        },\n        children: \"Switching...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), alert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: alert.type,\n      sx: {\n        mb: 3\n      },\n      onClose: () => setAlert(null),\n      children: alert.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 6,\n        background: 'rgba(28,32,48,0.96)',\n        borderRadius: 4,\n        boxShadow: '0 4px 24px 0 #0006',\n        p: {\n          xs: 2,\n          md: 4\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2,\n          color: '#b6c2e2',\n          fontWeight: 600,\n          letterSpacing: 0.5\n        },\n        children: \"Element Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortableTable, {\n        columns: [{\n          id: 'checked',\n          label: '',\n          align: 'center',\n          sortable: false,\n          render: (val, row) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: row.checked,\n            onChange: e => handleChecklistChange(row.symbol, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)\n        }, {\n          id: 'symbol',\n          label: 'Symbol',\n          sortable: true\n        }, {\n          id: 'name',\n          label: 'Name',\n          sortable: true\n        }, {\n          id: 'quantity',\n          label: 'Quantity',\n          sortable: true,\n          editable: true,\n          type: 'number',\n          inputProps: {\n            min: 0\n          },\n          render: (val, row) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: row.quantity,\n            min: 0,\n            style: {\n              width: 60,\n              background: '#23273a',\n              color: '#e3e6f3',\n              border: '1px solid #2d3147',\n              borderRadius: 4\n            },\n            onChange: e => handleCustomQtyChange(row.symbol, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)\n        }, {\n          id: 'vout_base',\n          label: 'Vout Base',\n          sortable: true\n        }, {\n          id: 'freq',\n          label: 'Freq',\n          sortable: true\n        }],\n        data: elementChecklist,\n        showIndex: true,\n        showActions: false,\n        editable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 4,\n          mb: 2,\n          color: '#b6c2e2',\n          fontWeight: 600,\n          letterSpacing: 0.5\n        },\n        children: \"Selected Elements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortableTable, {\n        columns: [{\n          id: 'symbol',\n          label: 'Symbol',\n          sortable: true\n        }, {\n          id: 'name',\n          label: 'Name',\n          sortable: true\n        }, {\n          id: 'quantity',\n          label: 'Quantity',\n          sortable: true\n        }, {\n          id: 'vout_base',\n          label: 'Vout Base',\n          sortable: true\n        }, {\n          id: 'freq',\n          label: 'Freq',\n          sortable: true\n        }],\n        data: elementChecklist.filter(e => e.checked),\n        showIndex: true,\n        showActions: false,\n        editable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          gap: 2,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            background: 'linear-gradient(90deg,#3a7bd5,#3a6073)',\n            color: '#fff',\n            fontWeight: 600,\n            boxShadow: '0 2px 8px #3a7bd588'\n          },\n          onClick: handleTestSubmit,\n          disabled: loading,\n          startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 224\n          }, this),\n          children: \"Send Test Parameters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            borderColor: '#b6c2e2',\n            color: '#b6c2e2',\n            fontWeight: 500,\n            ':hover': {\n              background: '#23273a',\n              borderColor: '#e3e6f3'\n            }\n          },\n          onClick: exportSTP,\n          startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 197\n          }, this),\n          children: \"Export STP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            borderColor: '#b6c2e2',\n            color: '#b6c2e2',\n            fontWeight: 500,\n            ':hover': {\n              background: '#23273a',\n              borderColor: '#e3e6f3'\n            }\n          },\n          onClick: downloadSTPTemplate,\n          startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 207\n          }, this),\n          children: \"Download Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            borderColor: '#b6e2c2',\n            color: '#b6e2c2',\n            fontWeight: 500,\n            ':hover': {\n              background: '#1a2a1a',\n              borderColor: '#b6e2c2'\n            }\n          },\n          onClick: () => fileInputRef.current.click(),\n          startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 222\n          }, this),\n          children: \"Import STP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: importSTP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2,\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: '#b6c2e2',\n              fontWeight: 600,\n              letterSpacing: 0.5,\n              mb: 0\n            },\n            children: \"Device Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            sx: {\n              borderColor: '#b6c2e2',\n              color: '#b6c2e2',\n              fontWeight: 500,\n              ml: 2,\n              ':hover': {\n                background: '#23273a',\n                borderColor: '#e3e6f3'\n              }\n            },\n            onClick: fetchDeviceSettings,\n            children: \"Request from Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SortableTable, {\n          columns: deviceSettingsColumns,\n          data: deviceSettingsData,\n          onEdit: handleDeviceSettingsEdit,\n          isAdmin: isAdmin,\n          editable: isAdmin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        background: 'rgba(24,28,40,0.98)',\n        borderRadius: 4,\n        boxShadow: '0 4px 24px 0 #0008',\n        p: {\n          xs: 2,\n          md: 4\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          color: '#b6c2e2',\n          fontWeight: 600,\n          letterSpacing: 0.5\n        },\n        children: \"Device Feedback Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleGetFeedbackInfo,\n          disabled: feedbackLoading,\n          sx: {\n            background: 'linear-gradient(90deg,#2193b0,#6dd5ed)',\n            color: '#fff',\n            fontWeight: 600\n          },\n          children: feedbackLoading ? 'Loading...' : 'Get Feedback Info'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          background: 'rgba(32,36,52,0.98)',\n          color: '#e3e6f3',\n          borderColor: '#23273a',\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              color: '#b6c2e2',\n              fontWeight: 600\n            },\n            children: \"Feedback Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              fontSize: 13,\n              background: '#23273a',\n              color: '#b6c2e2',\n              padding: 8,\n              borderRadius: 4,\n              minHeight: 60\n            },\n            children: feedbackInfo ? JSON.stringify(feedbackInfo, null, 2) : 'No feedback info'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceControl, \"0f4zpTu/6gZYDzHCOrBA6iBQVHU=\", false, function () {\n  return [useAuth];\n});\n_c = DeviceControl;\nexport default DeviceControl;\nvar _c;\n$RefreshReg$(_c, \"DeviceControl\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","Box","Typography","Alert","Button","Card","CardContent","ButtonGroup","Send","SendIcon","FileDownload","DownloadIcon","FileUpload","UploadIcon","api","getSocket","useAuth","SortableTable","exportComprehensiveData","importComprehensiveData","createComprehensiveTemplate","jsxDEV","_jsxDEV","DeviceControl","_s","role","deviceSettings","setDeviceSettings","elementChecklist","setElementChecklist","alert","setAlert","loading","setLoading","fileInputRef","transportMode","setTransportMode","transportLoading","setTransportLoading","fetchTransportMode","response","get","data","mode","error","type","message","handleTransportModeChange","post","deviceId","setDeviceId","feedbackInfo","setFeedbackInfo","feedbackLoading","setFeedbackLoading","socket","on","off","handleGetFeedbackInfo","getSelectedElementsFromChecklist","filter","item","checked","map","symbol","name","quantity","vout_base","freq","handleChecklistChange","prev","updatedChecklist","sort","a","b","handleCustomQtyChange","Number","handleTestSubmit","e","preventDefault","console","log","selectedFromChecklist","length","testData","element","elements","_error$response","_error$response2","status","handleDeviceSettingsEdit","rowIndex","columnId","value","updatedSettings","settingKey","Object","keys","key","exportSTP","stpData","result","includeValidation","timestamp","Date","toISOString","success","importSTP","event","file","target","files","validateData","allowUnknownParameters","checklistItem","importedData","find","row","defaultQuantity","warnings","join","validation","downloadSTPTemplate","includeInstructions","includeValidationRules","ELEMENTS","deviceSettingsColumns","id","label","sortable","editable","align","inputProps","min","fetchDeviceSettings","device_id","firmware_version","operating_mode","freefall","hptf","harmonic","duration_ms","vout_table","newSettings","checklist","deviceSettingsData","setting","unit","isAdmin","sx","p","maxWidth","mx","children","variant","mb","fontWeight","color","letterSpacing","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","background","borderRadius","disabled","onClick","textTransform","minWidth","ml","severity","onClose","boxShadow","xs","md","columns","render","val","onChange","style","width","border","showIndex","showActions","mt","flexWrap","startIcon","borderColor","current","click","accept","ref","onEdit","gutterBottom","fontSize","padding","minHeight","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/projects/aquatron/aquatronics/aquatron-frontend/src/pages/DeviceControl.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { \n  Box, \n  Typography, \n  Alert, \n  Button, \n  Card,\n  CardContent,\n  ButtonGroup\n} from '@mui/material';\nimport { \n  Send as SendIcon,\n  FileDownload as DownloadIcon,\n  FileUpload as UploadIcon\n} from '@mui/icons-material';\nimport api from '../api/axios';\nimport { getSocket } from '../socket';\nimport { useAuth } from '../auth/AuthContext';\nimport SortableTable from '../components/SortableTable';\nimport { \n  exportComprehensiveData, \n  importComprehensiveData, \n  createComprehensiveTemplate\n} from '../utils/excelUtils';\n\n// ...existing code...\n\nconst DeviceControl = () => {\n  const { role } = useAuth();\n  const [deviceSettings, setDeviceSettings] = useState({});\n  const [elementChecklist, setElementChecklist] = useState([]);\n  const [alert, setAlert] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const fileInputRef = useRef(null);\n  const [transportMode, setTransportMode] = useState('auto');\n  const [transportLoading, setTransportLoading] = useState(false);\n  // Fetch current transport mode on mount\n  useEffect(() => {\n    const fetchTransportMode = async () => {\n      try {\n        const response = await api.get('/device/transport-mode');\n        setTransportMode(response.data.mode || 'auto');\n      } catch (error) {\n        setAlert({ type: 'error', message: 'Failed to fetch transport mode' });\n      }\n    };\n    fetchTransportMode();\n  }, []);\n\n  // Change transport mode\n  const handleTransportModeChange = async (mode) => {\n    setTransportLoading(true);\n    try {\n      const response = await api.post('/device/transport-mode', { mode });\n      setTransportMode(response.data.mode);\n      setAlert({ type: 'success', message: `Transport mode set to ${response.data.mode}` });\n    } catch (error) {\n      setAlert({ type: 'error', message: 'Failed to set transport mode' });\n    }\n    setTransportLoading(false);\n  };\n  const [deviceId, setDeviceId] = useState('default');\n  // Feedback/ADC/statistics state\n  const [feedbackInfo, setFeedbackInfo] = useState(null);\n  const [feedbackLoading, setFeedbackLoading] = useState(false);\n// ...existing code...\n\n  // Get deviceId from socket events\n  useEffect(() => {\n    const socket = getSocket();\n    socket.on('device-status', (data) => {\n      if (data.deviceId) {\n        setDeviceId(data.deviceId);\n      }\n    });\n    socket.on('device-data', (data) => {\n      if (data.deviceId) {\n        setDeviceId(data.deviceId);\n      }\n    });\n    // Listen for feedback/ADC/statistics events\n    socket.on('feedback-info', (data) => {\n      setFeedbackInfo(data);\n      setFeedbackLoading(false);\n    });\n  // Removed adc-data and stat-data listeners (no longer used)\n    \n    return () => {\n      socket.off('device-status');\n      socket.off('device-data');\n      socket.off('feedback-info');\n  // Removed adc-data and stat-data listeners (no longer used)\n    };\n  }, []);\n  // --- FEEDBACK/ADC/STATISTICS REQUEST HANDLERS ---\n  const handleGetFeedbackInfo = async () => {\n    setFeedbackLoading(true);\n    setAlert(null);\n    try {\n      await api.get('/device/feedback-info');\n    } catch (error) {\n      setAlert({ type: 'error', message: 'Failed to get feedback info' });\n      setFeedbackLoading(false);\n    }\n  };\n  // Removed handleGetADCData and handleGetStatData (no longer used)\n\n  // Removed filteredElements and searchTerm logic (already deleted)\n\n  // Utility and handler functions used in JSX\n  const getSelectedElementsFromChecklist = () => {\n    return elementChecklist\n      .filter(item => item.checked)\n      .map(item => ({\n        symbol: item.symbol,\n        name: item.name,\n        quantity: item.quantity,\n        vout_base: item.vout_base,\n        freq: item.freq\n      }));\n  };\n\n  const handleChecklistChange = (symbol, checked) => {\n    setElementChecklist(prev => {\n      // First update the checked status\n      const updatedChecklist = prev.map(item =>\n        item.symbol === symbol ? { ...item, checked } : item\n      );\n      \n      // Then sort: checked items first, then unchecked items\n      return updatedChecklist.sort((a, b) => {\n        if (a.checked && !b.checked) return -1;\n        if (!a.checked && b.checked) return 1;\n        return 0; // Keep original order within each group\n      });\n    });\n  };\n\n  // Removed unused: handleChecklistQuantityChange (already deleted)\n\n  const handleCustomQtyChange = (symbol, quantity) => {\n    setElementChecklist(prev =>\n      prev.map(item =>\n        item.symbol === symbol ? { ...item, quantity: Number(quantity) } : item\n      )\n    );\n  };\n\n  const handleTestSubmit = async (e) => {\n    e.preventDefault();\n    console.log('🔍 handleTestSubmit called');\n    \n    const selectedFromChecklist = getSelectedElementsFromChecklist();\n    if (selectedFromChecklist.length === 0) {\n      setAlert({ type: 'error', message: 'Please select at least one element from the checklist' });\n      return;\n    }\n    try {\n      setLoading(true);\n      const testData = selectedFromChecklist.map(element => ({\n        symbol: element.symbol,\n        quantity: element.quantity\n      }));\n      \n      console.log('🔍 Sending test data:', testData);\n      console.log('🔍 API call to /device/sw-parameters');\n      \n  // Removed setLastSentData (no longer used)\n      \n      const response = await api.post('/device/sw-parameters', { \n        elements: testData,\n        deviceId: deviceId\n      });\n      console.log('🔍 API response received:', response);\n      \n      setAlert({ type: 'success', message: 'Test parameters sent successfully!' });\n      setElementChecklist(prev => prev.map(item => ({ ...item, checked: false })));\n    } catch (error) {\n      console.error('🔍 API call failed:', error);\n      console.error('🔍 Error details:', error.response?.data, error.response?.status);\n      setAlert({ type: 'error', message: 'Failed to send test parameters' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeviceSettingsEdit = async (rowIndex, columnId, value) => {\n    const updatedSettings = { ...deviceSettings };\n    const settingKey = Object.keys(updatedSettings).filter(key => key !== 'vout_table')[rowIndex];\n    if (settingKey) {\n      updatedSettings[settingKey] = value;\n      setDeviceSettings(updatedSettings);\n      try {\n        await api.post('/device/settings', {\n          ...updatedSettings,\n          deviceId: deviceId\n        });\n        setAlert({ type: 'success', message: 'Device settings updated successfully!' });\n      } catch (error) {\n        setAlert({ type: 'error', message: 'Failed to update device settings' });\n      }\n    }\n  };\n\n  // Excel import/export functions for STP using utility functions\n  const exportSTP = () => {\n    try {\n      // Prepare STP data with quantities from checklist\n      const selectedFromChecklist = getSelectedElementsFromChecklist();\n      \n      if (selectedFromChecklist.length === 0) {\n        setAlert({ type: 'error', message: 'Please select elements from the checklist to export' });\n        return;\n      }\n\n      const stpData = selectedFromChecklist.map(element => ({\n        symbol: element.symbol,\n        name: element.name,\n        quantity: element.quantity,\n        vout_base: element.vout_base,\n        freq: element.freq\n      }));\n\n      const result = exportComprehensiveData(deviceSettings, stpData, 'stp_and_device_settings.xlsx', {\n        includeValidation: true,\n        timestamp: new Date().toISOString()\n      });\n\n      if (result.success) {\n        setAlert({ type: 'success', message: 'STP and device settings exported successfully!' });\n      } else {\n        setAlert({ type: 'error', message: `Export failed: ${result.message}` });\n      }\n    } catch (error) {\n      console.error('Export error:', error);\n      setAlert({ type: 'error', message: 'Failed to export STP parameters' });\n    }\n  };\n\n  const importSTP = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      setLoading(true);\n      \n      const result = await importComprehensiveData(file, {\n        validateData: true,\n        allowUnknownParameters: false\n      });\n\n      if (result.success) {\n        // Update STP data in checklist\n        if (result.stpData && result.stpData.length > 0) {\n          const updatedChecklist = elementChecklist.map(checklistItem => {\n            const importedData = result.stpData.find(row => row.symbol === checklistItem.symbol);\n            if (importedData) {\n              return {\n                ...checklistItem,\n                quantity: Number(importedData.quantity) || checklistItem.defaultQuantity,\n                checked: true\n              };\n            }\n            return checklistItem;\n          });\n          \n          setElementChecklist(updatedChecklist);\n        }\n\n        // Update device settings\n        if (result.deviceSettings && Object.keys(result.deviceSettings).length > 0) {\n          setDeviceSettings(prev => ({ ...prev, ...result.deviceSettings }));\n        }\n\n        // Show validation warnings if any\n        if (result.warnings && result.warnings.length > 0) {\n          setAlert({ \n            type: 'warning', \n            message: `Import completed with warnings: ${result.warnings.join(', ')}` \n          });\n        } else {\n          setAlert({ type: 'success', message: 'STP and device settings imported successfully!' });\n        }\n\n        // Show validation summary if available\n        if (result.validation) {\n          console.log('Import validation:', result.validation);\n        }\n      } else {\n        setAlert({ type: 'error', message: `Import failed: ${result.message}` });\n      }\n    } catch (error) {\n      console.error('Import error:', error);\n      setAlert({ type: 'error', message: 'Failed to import STP parameters. Please check the file format.' });\n    } finally {\n      setLoading(false);\n      event.target.value = '';\n    }\n  };\n\n  const downloadSTPTemplate = () => {\n    try {\n      const result = createComprehensiveTemplate('stp_and_device_template.xlsx', {\n        includeInstructions: true,\n        includeValidationRules: true\n      });\n\n      if (result.success) {\n        setAlert({ type: 'success', message: 'STP and device settings template downloaded successfully!' });\n      } else {\n        setAlert({ type: 'error', message: `Template download failed: ${result.message}` });\n      }\n    } catch (error) {\n      console.error('Template download error:', error);\n      setAlert({ type: 'error', message: 'Failed to download template' });\n    }\n  };\n\n  // Removed exportSWPForDevice, exportControllerSWP, and related orphaned code (already deleted)\n\n  // Available elements data with default quantities\n  const ELEMENTS = useMemo(() => [\n  { symbol: 'Li', name: 'Li', defaultQuantity: 100, vout_base: 3.71, freq: 2226 },\n  { symbol: 'Ca', name: 'Ca', defaultQuantity: 100, vout_base: 2.95, freq: 1765 },\n  { symbol: 'Na', name: 'Na', defaultQuantity: 100, vout_base: 3.032, freq: 1818 },\n  { symbol: 'Cl', name: 'Cl', defaultQuantity: 100, vout_base: 3.916, freq: 2351 },\n  { symbol: 'Fe', name: 'Fe', defaultQuantity: 100, vout_base: 4.558, freq: 2739 },\n  { symbol: 'Zn', name: 'Zn', defaultQuantity: 100, vout_base: 4.167, freq: 2504 },\n  { symbol: 'Cu', name: 'Cu', defaultQuantity: 100, vout_base: 4.557, freq: 2739 },\n  { symbol: 'Pb', name: 'Pb', defaultQuantity: 100, vout_base: 3.321, freq: 1988 },\n  { symbol: 'Mg', name: 'Mg', defaultQuantity: 100, vout_base: 3.63, freq: 2175 },\n  { symbol: 'Mn', name: 'Mn', defaultQuantity: 100, vout_base: 4.497, freq: 2697 },\n  { symbol: 'Cd', name: 'Cd', defaultQuantity: 100, vout_base: 3.711, freq: 2228 },\n  { symbol: 'K', name: 'K', defaultQuantity: 100, vout_base: 2.454, freq: 1466 },\n  { symbol: 'B', name: 'B', defaultQuantity: 100, vout_base: 5.256, freq: 3161 },\n  { symbol: 'F', name: 'F', defaultQuantity: 100, vout_base: 3.896, freq: 2340 },\n  { symbol: 'Mo', name: 'Mo', defaultQuantity: 100, vout_base: 4.147, freq: 2486 },\n  { symbol: 'Ni', name: 'Ni', defaultQuantity: 100, vout_base: 4.661, freq: 2797 },\n  { symbol: 'Se', name: 'Se', defaultQuantity: 100, vout_base: 3.423, freq: 2052 },\n  { symbol: 'Si', name: 'Si', defaultQuantity: 100, vout_base: 3.814, freq: 2287 },\n  { symbol: 'Ag', name: 'Ag', defaultQuantity: 100, vout_base: 4.043, freq: 2428 },\n  { symbol: 'As', name: 'As', defaultQuantity: 100, vout_base: 3.711, freq: 2228 },\n  { symbol: 'Hg', name: 'Hg', defaultQuantity: 100, vout_base: 3.568, freq: 2140 },\n  { symbol: 'P', name: 'P', defaultQuantity: 100, vout_base: 3.402, freq: 2041 },\n  { symbol: 'Al', name: 'Al', defaultQuantity: 100, vout_base: 4.065, freq: 2439 },\n  { symbol: 'Cr', name: 'Cr', defaultQuantity: 100, vout_base: 1.343, freq: 797 },\n  { symbol: 'Co', name: 'Co', defaultQuantity: 100, vout_base: 4.66, freq: 2797 },\n  { symbol: 'Ba', name: 'Ba', defaultQuantity: 100, vout_base: 2.598, freq: 1554 },\n  { symbol: 'Am', name: 'Am', defaultQuantity: 100, vout_base: 3.341, freq: 1999 },\n  { symbol: 'NO', name: 'NO', defaultQuantity: 100, vout_base: 4.660, freq: 2797 }\n  ], []);\n\n\n\n  // Column definitions for Device Settings - non-editable for non-admin users\n  const deviceSettingsColumns = [\n    { id: 'setting', label: 'Setting', sortable: true, editable: false },\n    { \n      id: 'value', \n      label: 'Value', \n      align: 'center', \n      sortable: true,\n      editable: role === 'admin' || role === 'superadmin',\n      type: 'number',\n      inputProps: { min: 0 }\n    },\n    { \n      id: 'unit', \n      label: 'Unit', \n      align: 'center', \n      sortable: true,\n      editable: false\n    }\n  ];\n\n\n\n  // Fetch device settings\n  const fetchDeviceSettings = async () => {\n    try {\n      setLoading(true);\n  const response = await api.get('/device/settings');\n  console.log('DEBUG /device/settings response:', response.data);\n  setDeviceSettings(response.data);\n    } catch (error) {\n      console.error('Error fetching device settings:', error);\n      // Set mock data for demonstration\n      setDeviceSettings({\n        device_id: 'DEV_001',\n        firmware_version: '1.2.3',\n        operating_mode: 'Normal',\n        freefall: 10,\n        hptf: 500,\n        harmonic: 0,\n        duration_ms: 7000,\n        vout_table: [\n          { symbol: 'H', vout_base: 1.0, freq: 600 },\n          { symbol: 'He', vout_base: 1.1, freq: 660 },\n          { symbol: 'Li', vout_base: 3.71, freq: 2226 },\n          { symbol: 'Be', vout_base: 1.2, freq: 720 },\n          { symbol: 'B', vout_base: 1.3, freq: 780 },\n          { symbol: 'C', vout_base: 1.4, freq: 840 },\n          { symbol: 'N', vout_base: 1.5, freq: 900 },\n          { symbol: 'O', vout_base: 1.6, freq: 960 },\n          { symbol: 'F', vout_base: 1.7, freq: 1020 },\n          { symbol: 'Ne', vout_base: 1.8, freq: 1080 },\n          { symbol: 'Na', vout_base: 3.032, freq: 1818 },\n          { symbol: 'Mg', vout_base: 2.0, freq: 1200 },\n          { symbol: 'Al', vout_base: 2.1, freq: 1260 },\n          { symbol: 'Si', vout_base: 2.2, freq: 1320 },\n          { symbol: 'P', vout_base: 2.3, freq: 1380 },\n          { symbol: 'S', vout_base: 2.4, freq: 1440 },\n          { symbol: 'Cl', vout_base: 3.916, freq: 2351 },\n          { symbol: 'Ar', vout_base: 2.6, freq: 1560 },\n          { symbol: 'K', vout_base: 2.7, freq: 1620 },\n          { symbol: 'Ca', vout_base: 2.95, freq: 1765 },\n          { symbol: 'Sc', vout_base: 2.9, freq: 1740 },\n          { symbol: 'Ti', vout_base: 3.0, freq: 1800 },\n          { symbol: 'V', vout_base: 3.1, freq: 1860 },\n          { symbol: 'Cr', vout_base: 3.2, freq: 1920 },\n          { symbol: 'Mn', vout_base: 3.3, freq: 1980 },\n          { symbol: 'Fe', vout_base: 4.558, freq: 2739 },\n          { symbol: 'Co', vout_base: 3.5, freq: 2100 },\n          { symbol: 'Ni', vout_base: 3.6, freq: 2160 },\n          { symbol: 'Cu', vout_base: 3.7, freq: 2220 },\n          { symbol: 'Zn', vout_base: 3.8, freq: 2280 }\n        ]\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Removed fetchTransportMode and handleTransportModeChange (no longer used)\n\n  useEffect(() => {\n    const socket = getSocket();\n    socket.on('device-settings-updated', (newSettings) => {\n      setDeviceSettings(newSettings);\n    });\n    return () => {\n      socket.off('device-settings-updated');\n    };\n  }, []);\n\n  // Initialize element checklist with all elements\n  useEffect(() => {\n    const checklist = ELEMENTS.map(element => ({\n      ...element,\n      checked: false,\n      quantity: element.defaultQuantity\n    }));\n    setElementChecklist(checklist);\n  }, [ELEMENTS]);\n\n\n\n  // Convert device settings to table data\n  const deviceSettingsData = [\n    { setting: 'Device ID', value: deviceSettings.device_id || 'N/A', unit: '' },\n    { setting: 'Firmware Version', value: deviceSettings.firmware_version || 'N/A', unit: '' },\n    { setting: 'Operating Mode', value: deviceSettings.operating_mode || 'N/A', unit: '' },\n    { setting: 'Freefall', value: deviceSettings.freefall || 0, unit: 'ms' },\n    { setting: 'HPTF', value: deviceSettings.hptf || 0, unit: 'Hz' },\n    { setting: 'Harmonic', value: deviceSettings.harmonic || 0, unit: '' },\n    { setting: 'Duration', value: deviceSettings.duration_ms || 0, unit: 'ms' }\n  ];\n\n  const isAdmin = role === 'admin' || role === 'superadmin';\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 1400, mx: 'auto' }}>\n      <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 700, color: '#e3e6f3', letterSpacing: 1, textShadow: '0 2px 8px #2228' }}>\n        Device Control\n      </Typography>\n      <Box sx={{ mb: 3, display: 'flex', alignItems: 'center', gap: 2 }}>\n        <Typography variant=\"subtitle1\" sx={{ color: '#b6c2e2', fontWeight: 500 }}>\n          Transport Mode:\n        </Typography>\n        <ButtonGroup variant=\"outlined\" sx={{ background: '#23273a', borderRadius: 2 }} disabled={transportLoading}>\n          {['auto', 'wifi', 'uart'].map((mode) => (\n            <Button\n              key={mode}\n              variant={transportMode === mode ? 'contained' : 'outlined'}\n              color={transportMode === mode ? 'primary' : 'inherit'}\n              onClick={() => handleTransportModeChange(mode)}\n              sx={{ fontWeight: 600, textTransform: 'capitalize', minWidth: 80 }}\n              disabled={transportMode === mode || transportLoading}\n            >\n              {mode}\n            </Button>\n          ))}\n        </ButtonGroup>\n        {transportLoading && <Typography sx={{ color: '#b6c2e2', ml: 2 }}>Switching...</Typography>}\n      </Box>\n      {alert && (\n        <Alert \n          severity={alert.type} \n          sx={{ mb: 3 }}\n          onClose={() => setAlert(null)}\n        >\n          {alert.message}\n        </Alert>\n      )}\n      {/* --- ORIGINAL DEVICE CONTROL SECTION --- */}\n      <Box sx={{ mb: 6, background: 'rgba(28,32,48,0.96)', borderRadius: 4, boxShadow: '0 4px 24px 0 #0006', p: { xs: 2, md: 4 } }}>\n        <Typography variant=\"h6\" sx={{ mb: 2, color: '#b6c2e2', fontWeight: 600, letterSpacing: 0.5 }}>\n          Element Checklist\n        </Typography>\n        <SortableTable\n          columns={[\n            { id: 'checked', label: '', align: 'center', sortable: false, render: (val, row) => (\n              <input type=\"checkbox\" checked={row.checked} onChange={e => handleChecklistChange(row.symbol, e.target.checked)} />\n            ) },\n            { id: 'symbol', label: 'Symbol', sortable: true },\n            { id: 'name', label: 'Name', sortable: true },\n            { id: 'quantity', label: 'Quantity', sortable: true, editable: true, type: 'number', inputProps: { min: 0 }, render: (val, row) => (\n              <input type=\"number\" value={row.quantity} min={0} style={{ width: 60, background: '#23273a', color: '#e3e6f3', border: '1px solid #2d3147', borderRadius: 4 }} onChange={e => handleCustomQtyChange(row.symbol, e.target.value)} />\n            ) },\n            { id: 'vout_base', label: 'Vout Base', sortable: true },\n            { id: 'freq', label: 'Freq', sortable: true }\n          ]}\n          data={elementChecklist}\n          showIndex={true}\n          showActions={false}\n          editable={false}\n        />\n        <Typography variant=\"h6\" sx={{ mt: 4, mb: 2, color: '#b6c2e2', fontWeight: 600, letterSpacing: 0.5 }}>\n          Selected Elements\n        </Typography>\n        <SortableTable\n          columns={[\n            { id: 'symbol', label: 'Symbol', sortable: true },\n            { id: 'name', label: 'Name', sortable: true },\n            { id: 'quantity', label: 'Quantity', sortable: true },\n            { id: 'vout_base', label: 'Vout Base', sortable: true },\n            { id: 'freq', label: 'Freq', sortable: true }\n          ]}\n          data={elementChecklist.filter(e => e.checked)}\n          showIndex={true}\n          showActions={false}\n          editable={false}\n        />\n        <Box sx={{ mt: 3, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n          <Button variant=\"contained\" sx={{ background: 'linear-gradient(90deg,#3a7bd5,#3a6073)', color: '#fff', fontWeight: 600, boxShadow: '0 2px 8px #3a7bd588' }} onClick={handleTestSubmit} disabled={loading} startIcon={<SendIcon />}>\n            Send Test Parameters\n          </Button>\n          <Button variant=\"outlined\" sx={{ borderColor: '#b6c2e2', color: '#b6c2e2', fontWeight: 500, ':hover': { background: '#23273a', borderColor: '#e3e6f3' } }} onClick={exportSTP} startIcon={<DownloadIcon />}>\n            Export STP\n          </Button>\n          <Button variant=\"outlined\" sx={{ borderColor: '#b6c2e2', color: '#b6c2e2', fontWeight: 500, ':hover': { background: '#23273a', borderColor: '#e3e6f3' } }} onClick={downloadSTPTemplate} startIcon={<DownloadIcon />}>\n            Download Template\n          </Button>\n          <Button variant=\"outlined\" sx={{ borderColor: '#b6e2c2', color: '#b6e2c2', fontWeight: 500, ':hover': { background: '#1a2a1a', borderColor: '#b6e2c2' } }} onClick={() => fileInputRef.current.click()} startIcon={<UploadIcon />}>\n            Import STP\n          </Button>\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={importSTP}\n          />\n        </Box>\n        <Box sx={{ mt: 4 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, gap: 2 }}>\n            <Typography variant=\"h6\" sx={{ color: '#b6c2e2', fontWeight: 600, letterSpacing: 0.5, mb: 0 }}>\n              Device Settings\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              sx={{ borderColor: '#b6c2e2', color: '#b6c2e2', fontWeight: 500, ml: 2, ':hover': { background: '#23273a', borderColor: '#e3e6f3' } }}\n              onClick={fetchDeviceSettings}\n            >\n              Request from Device\n            </Button>\n          </Box>\n          <SortableTable\n            columns={deviceSettingsColumns}\n            data={deviceSettingsData}\n            onEdit={handleDeviceSettingsEdit}\n            isAdmin={isAdmin}\n            editable={isAdmin}\n          />\n        </Box>\n      </Box>\n      {/* --- FEEDBACK INFO PANEL ONLY --- */}\n      <Box sx={{ mt: 4, background: 'rgba(24,28,40,0.98)', borderRadius: 4, boxShadow: '0 4px 24px 0 #0008', p: { xs: 2, md: 4 } }}>\n        <Typography variant=\"h6\" gutterBottom sx={{ color: '#b6c2e2', fontWeight: 600, letterSpacing: 0.5 }}>\n          Device Feedback Info\n        </Typography>\n        <ButtonGroup variant=\"contained\" sx={{ mb: 2 }}>\n          <Button onClick={handleGetFeedbackInfo} disabled={feedbackLoading} sx={{ background: 'linear-gradient(90deg,#2193b0,#6dd5ed)', color: '#fff', fontWeight: 600 }}>\n            {feedbackLoading ? 'Loading...' : 'Get Feedback Info'}\n          </Button>\n        </ButtonGroup>\n        <Card variant=\"outlined\" sx={{ background: 'rgba(32,36,52,0.98)', color: '#e3e6f3', borderColor: '#23273a', mt: 2 }}>\n          <CardContent>\n            <Typography variant=\"subtitle1\" sx={{ color: '#b6c2e2', fontWeight: 600 }}>Feedback Info</Typography>\n            <pre style={{ fontSize: 13, background: '#23273a', color: '#b6c2e2', padding: 8, borderRadius: 4, minHeight: 60 }}>\n              {feedbackInfo ? JSON.stringify(feedbackInfo, null, 2) : 'No feedback info'}\n            </pre>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DeviceControl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}